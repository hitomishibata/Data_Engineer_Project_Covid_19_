{
	"name": "dataflow_age_cases_national",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_age_raw_adls",
						"type": "DatasetReference"
					},
					"name": "AgeCasesNationalFile"
				},
				{
					"dataset": {
						"referenceName": "ds_look_up_date_adls",
						"type": "DatasetReference"
					},
					"name": "LookupDate"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_processed_age_cases_adls",
						"type": "DatasetReference"
					},
					"name": "sinkProcessedAgeCasesFile"
				}
			],
			"transformations": [
				{
					"name": "joinLookupDateFile"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregateFirstandEndDate"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "select1"
				},
				{
					"name": "pivotAgeGroup"
				},
				{
					"name": "select2"
				},
				{
					"name": "sortYearWeek"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          year_week as string,",
				"          age_group as string,",
				"          new_cases as integer,",
				"          population as integer,",
				"          rate_14_day_per_100k as double,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AgeCasesNationalFile",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LookupDate",
				"AgeCasesNationalFile, aggregateFirstandEndDate join(AgeCasesNationalFile@year_week == aggregateFirstandEndDate@year_week,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLookupDateFile",
				"LookupDate derive(year_week = regexReplace(year_week, '(\\\\d{4})(\\\\d{2})', '$1-$2')) ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(year_week),",
				"     week_first_date = min(date),",
				"          week_last_date = max(date)) ~> aggregateFirstandEndDate",
				"select1 derive(year_week = regexReplace(year_week, '-', '-W')) ~> derivedColumn2",
				"joinLookupDateFile select(mapColumn(",
				"          year_week = AgeCasesNationalFile@year_week,",
				"          week_first_date,",
				"          week_last_date,",
				"          country,",
				"          country_code_2_digit = country_code,",
				"          population,",
				"          age_group,",
				"          new_cases,",
				"          rate_14_day_per_100k,",
				"          source,",
				"          year_week = aggregateFirstandEndDate@year_week",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"derivedColumn2 pivot(groupBy(year_week,",
				"          week_first_date,",
				"          week_last_date,",
				"          country,",
				"          country_code_2_digit,",
				"          population,",
				"          rate_14_day_per_100k,",
				"          source),",
				"     pivotBy(age_group, ['<15yr', '15-24yr', '35-49yr', '50-64yr', '65-79yr', '80+yr']),",
				"     {} = sum(new_cases),",
				"     columnNaming: '$V-$Nnew_cases',",
				"     lateral: true) ~> pivotAgeGroup",
				"pivotAgeGroup select(mapColumn(",
				"          year_week,",
				"          week_first_date,",
				"          week_last_date,",
				"          country,",
				"          country_code_2_digit,",
				"          population,",
				"          Age_group_0_14 = {<15yr-new_cases},",
				"          Age_group_15_24 = {15-24yr-new_cases},",
				"          Age_group_35_49 = {35-49yr-new_cases},",
				"          Age_group_50_64 = {50-64yr-new_cases},",
				"          {Age_group_65-79} = {65-79yr-new_cases},",
				"          Age_group_80_max = {80+yr-new_cases},",
				"          rate_14_day_per_100k,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sort(desc(year_week, true)) ~> sortYearWeek",
				"sortYearWeek sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          country as string,",
				"          country_code as string,",
				"          year_week as string,",
				"          age_group as string,",
				"          new_cases as string,",
				"          population as string,",
				"          rate_14_day_per_100k as string,",
				"          source as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkProcessedAgeCasesFile"
			]
		}
	}
}